// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaBackDotnet.Data;

#nullable disable

namespace PruebaBackDotnet.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20250412052401_UsuarioUnico")]
    partial class UsuarioUnico
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaBackDotnet.Models.Entities.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cargos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("099c91db-2f14-441c-9d73-60f0f4388b2f"),
                            Activo = true,
                            Codigo = "C001",
                            IdUsuarioCreacion = 1,
                            Nombre = "Desarrollador"
                        },
                        new
                        {
                            Id = new Guid("3c853ca0-ae07-4f9e-af22-b54a46ab26b1"),
                            Activo = true,
                            Codigo = "C002",
                            IdUsuarioCreacion = 1,
                            Nombre = "Analista"
                        },
                        new
                        {
                            Id = new Guid("c2c48250-a919-4d26-9d7f-e26c365992ee"),
                            Activo = true,
                            Codigo = "C003",
                            IdUsuarioCreacion = 1,
                            Nombre = "Tester"
                        });
                });

            modelBuilder.Entity("PruebaBackDotnet.Models.Entities.Departamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ac1b857-37ca-4169-ab21-36dad77ab81a"),
                            Activo = true,
                            Codigo = "D001",
                            IdUsuarioCreacion = 1,
                            Nombre = "TI"
                        },
                        new
                        {
                            Id = new Guid("dfbd8911-9c55-4e75-b6f8-291485ccf4bc"),
                            Activo = true,
                            Codigo = "D002",
                            IdUsuarioCreacion = 1,
                            Nombre = "Recursos Humanos"
                        });
                });

            modelBuilder.Entity("PruebaBackDotnet.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCargo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdCargo");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex(new[] { "Usuario" }, "IX_Users_Usuario_Unique")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("decc4131-06ef-49b6-9e7f-97dfbf75d290"),
                            IdCargo = new Guid("099c91db-2f14-441c-9d73-60f0f4388b2f"),
                            IdDepartamento = new Guid("2ac1b857-37ca-4169-ab21-36dad77ab81a"),
                            PrimerApellido = "Doe",
                            PrimerNombre = "John",
                            SegundoApellido = "Smith",
                            SegundoNombre = "Doe",
                            Usuario = "jdoe"
                        },
                        new
                        {
                            Id = new Guid("72372272-c28f-449f-b473-7f824358d23f"),
                            IdCargo = new Guid("3c853ca0-ae07-4f9e-af22-b54a46ab26b1"),
                            IdDepartamento = new Guid("dfbd8911-9c55-4e75-b6f8-291485ccf4bc"),
                            PrimerApellido = "Jones",
                            PrimerNombre = "Mary",
                            SegundoApellido = "Johnson",
                            SegundoNombre = "Jones",
                            Usuario = "mjones"
                        });
                });

            modelBuilder.Entity("PruebaBackDotnet.Models.Entities.User", b =>
                {
                    b.HasOne("PruebaBackDotnet.Models.Entities.Cargo", "Cargo")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCargo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PruebaBackDotnet.Models.Entities.Departamento", "Departamento")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("PruebaBackDotnet.Models.Entities.Cargo", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PruebaBackDotnet.Models.Entities.Departamento", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
